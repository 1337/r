// Generated by CoffeeScript 1.9.3
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['jquery', 'underscore', 'backbone', 'marionette', 'Models'], function($, _, Backbone, Marionette, Models) {
    var Controllers, settings;
    Controllers = {};
    settings = Models.settings;
    Controllers.getHistory = function() {
      var e;
      try {
        return settings.get('pastSubs', []) || [];
      } catch (_error) {
        e = _error;
        return [];
      }
    };
    Controllers.addHistory = function(subName, subLink) {
      var currentHistory, index, ref, subs;
      currentHistory = Controllers.getHistory();
      subs = _.map(_.pluck(currentHistory, 'sub'), function(thing) {
        return thing.toLowerCase();
      });
      if (ref = subName.toLowerCase(), indexOf.call(subs, ref) >= 0) {
        index = subs.indexOf(subName.toLowerCase());
        currentHistory.splice(index, 1);
      }
      currentHistory.unshift({
        sub: subName,
        link: subLink
      });
      settings.set('pastSubs', currentHistory);
      return currentHistory;
    };
    Controllers.getRelatedSubs = function(sub, count) {
      var cluster, clusterId, keysInCluster, res;
      if (count == null) {
        count = 0;
      }
      cluster = window.redditMarkovClusters;
      if (!(cluster && cluster[sub])) {
        return [];
      }
      clusterId = cluster[sub];
      keysInCluster = [];
      _.each(cluster, function(val, key) {
        if (val === clusterId) {
          return keysInCluster.push(key);
        }
      });
      res = [];
      _.each(keysInCluster, function(val) {
        if (val !== sub) {
          return res.push({
            sub: val,
            link: val
          });
        }
      });
      if (count === 0) {
        return res;
      } else {
        return res.slice(0, +(count - 1) + 1 || 9e9);
      }
    };
    return Controllers;
  });

}).call(this);
